{
    "task": "calibrator", 
    "base": "stimela/meqtrees", 
    "tag": "0.2.7", 
    "description": "Uses MeqTrees to calibrate a measurement set, given a sky model (Gaussians and point sources, and/or visibility data in MODEL_DATA column)", 
    "prefix": " ", 
    "binary": "/usr/bin/meqtree-pipeliner.py", 
    "msdir": true, 
    "parameters": [
        {
            "info": "Name of MS to be calibrated", 
            "name": "msname", 
            "io": "msfile", 
            "default": null, 
            "dtype": "file", 
            "required": true
        }, 
        {
            "info": "Sky model to use for the calibration", 
            "dtype": "file", 
            "default": null, 
            "name": "skymodel", 
            "io": "input"
        }, 
        {
            "info": "Source subset to use for the calibration", 
            "dtype": "str", 
            "default": "all", 
            "name": "subset"
        }, 
        {
            "info": "Add visibility model data to the calibration model. This model should be saved in the MODEL_DATA column", 
            "dtype": "bool", 
            "default": false, 
            "name": "add-vis-model"
        }, 
        {
            "info": "Label for gain and diagnostic plots from the caibration. May not be needed if 'prefix' is provided.", 
            "dtype": "str", 
            "default": null, 
            "name": "label"
        }, 
        {
            "info": "Prefix for gain and diagnostic plots. If not specified will use basename of MS.", 
            "dtype": "str", 
            "default": null, 
            "name": "prefix"
        }, 
        {
            "info": "Make gain plots", 
            "dtype": "bool", 
            "default": false, 
            "name": "make-plots"
        }, 
        {
            "info": "Column that has the data to be calibrated", 
            "dtype": "str", 
            "default": "DATA", 
            "name": "column"
        }, 
        {
            "info": "Column that the calibrated data should be dumped into", 
            "dtype": "str", 
            "default": "CORRECTED_DATA", 
            "name": "output-column"
        }, 
        {
            "info": "Data to be outputed after calibration", 
            "dtype": "str", 
            "default": null, 
            "name": "output-data", 
            "choices": [
                "CORRECTED_RESIDUAL", 
                "CORRECTED_DATA", 
                "RESIDUAL_DATA", 
                "CORR_RES"
            ]
        }, 
        {
            "info": "Number of CPUs to use for  multithreading", 
            "dtype": "int", 
            "default": 2, 
            "name": "threads"
        }, 
        {
            "info": "Section to execute in TDL config file. Only needed if using custom TDL config", 
            "dtype": "str", 
            "default": null, 
            "name": "section"
        }, 
        {
            "info": "Field ID", 
            "dtype": "int", 
            "default": 0, 
            "name": "field-id"
        }, 
        {
            "info": "SPW ID", 
            "dtype": "int", 
            "name": "spw-id", 
            "defaut": 0
        }, 
        {
            "info": "Add a primary beam model", 
            "dtype": "bool", 
            "default": false, 
            "name": "Ejones"
        }, 
        {
            "info": "Beam files pattern", 
            "check_io": false, 
            "name": "beam-files-pattern", 
            "io": "input", 
            "default": null, 
            "dtype": "file"
        }, 
        {
            "info": "Type of input beam files", 
            "dtype": "str", 
            "default": "fits", 
            "name": "beam-type", 
            "choices": [
                "fits", 
                "emsss"
            ]
        }, 
        {
            "info": "Beam l axis", 
            "dtype": "str", 
            "default": "X", 
            "name": "beam-l-axis"
        }, 
        {
            "info": "Beam m axis", 
            "dtype": "str", 
            "default": "Y", 
            "name": "beam-m-axis"
        }, 
        {
            "info": "Enable paralactic angle rotation. Enable if telescope mount is ALT-AZ", 
            "dtype": "bool", 
            "default": false, 
            "name": "paralactic-angle-rotation"
        }, 
        {
            "info": "Enable direction dependent calibration", 
            "dtype": "bool", 
            "default": false, 
            "name": "Gjones"
        }, 
        {
            "info": "Jones matrix type", 
            "dtype": "str", 
            "default": "Gain2x2", 
            "name": "Gjones-matrix-type", 
            "choices": [
                "Gain2x2", 
                "GainDiag", 
                "GainDiagPhase", 
                "GainDiang2a", 
                "GainDiagCommon"
            ]
        }, 
        {
            "info": "Solution intervals in time and frequency in time/frequency bins. Should be given as a list of two integers", 
            "dtype": "list:int", 
            "default": null, 
            "name": "Gjones-solution-intervals"
        }, 
        {
            "info": "Solution intervals in time and frequency in time/frequency bins. Should be given as a list of two integers", 
            "dtype": "list:int", 
            "default": null, 
            "name": "Gjones-smooothing-intervals"
        }, 
        {
            "info": "Gjones amplitude clipping", 
            "dtype": "bool", 
            "default": false, 
            "name": "Gjones-ampl-clipping"
        }, 
        {
            "info": "Gjones chi square clipping", 
            "dtype": "bool", 
            "default": false, 
            "name": "Gjones-chisq-clipping"
        }, 
        {
            "info": "Gjones threshold level", 
            "dtype": "float", 
            "default": 10, 
            "name": "Gjones-thresh-sigma"
        }, 
        {
            "info": "Gjones flagging amplitude", 
            "dtype": "float", 
            "default": 0.2, 
            "name": "Gjones-ampl-clipping-low"
        }, 
        {
            "info": "Gjones flagging amplitude", 
            "dtype": "float", 
            "default": 1.8, 
            "name": "Gjones-ampl-clipping-high"
        }, 
        {
            "info": "Apply existing gains", 
            "dtype": "bool", 
            "default": false, 
            "name": "Gjones-apply-only"
        }, 
        {
            "info": "Enable direction dependent calibration", 
            "dtype": "bool", 
            "default": false, 
            "name": "DDjones"
        }, 
        {
            "info": "Jones matrix type", 
            "dtype": "str", 
            "default": "Gain2x2", 
            "name": "DDjones-matrix-type", 
            "choices": [
                "Gain2x2", 
                "GainDiag", 
                "GainDiagPhase", 
                "GainDiang2a", 
                "GainDiagCommon"
            ]
        }, 
        {
            "info": "Number of iterations", 
            "dtype": "int", 
            "default": 50, 
            "name": "DDjones-niter"
        }, 
        {
            "info": "Tag for sources that will recieve DD calibration", 
            "dtype": "str", 
            "default": "dE", 
            "name": "DDjones-tag"
        }, 
        {
            "info": "Solution intervals in time and frequency in time/frequency bins. Should be given as a list of two integers", 
            "dtype": "list:int", 
            "default": null, 
            "name": "DDjones-solution-intervals"
        }, 
        {
            "info": "Smoothing intervals in time and frequency in time/frequency bins. Should be given as a list of two integers", 
            "dtype": "list:int", 
            "default": null, 
            "name": "DDjones-smoothing-intervals"
        }, 
        {
            "info": "DDjones amplitude clipping", 
            "dtype": "bool", 
            "default": false, 
            "name": "DDjones-ampl-clipping"
        }, 
        {
            "info": "DDjones chi square clipping", 
            "dtype": "bool", 
            "default": false, 
            "name": "DDjones-chisq-clipping"
        }, 
        {
            "info": "DDjones threshold level", 
            "dtype": "float", 
            "default": 10, 
            "name": "DDjones-thresh-sigma"
        }, 
        {
            "info": "DDjones flagging amplitude", 
            "dtype": "float", 
            "default": 0.2, 
            "name": "DDjones-ampl-clipping-low"
        }, 
        {
            "info": "DDjones flagging amplitude", 
            "dtype": "float", 
            "default": 1.8, 
            "name": "DDjones-ampl-clipping-high"
        }, 
        {
            "info": "Apply existing gains", 
            "dtype": "bool", 
            "default": false, 
            "name": "DDjones-apply-only"
        }, 
        {
            "info": "Enable interferometer based gain solutions", 
            "dtype": "bool", 
            "default": false, 
            "name": "IFRjones"
        }, 
        {
            "info": "Apply existing gains", 
            "dtype": "bool", 
            "default": false, 
            "name": "IFRjones-apply-only"
        }
    ]
}